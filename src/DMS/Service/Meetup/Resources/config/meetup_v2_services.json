{
    "name": "Meetup",
    "apiVersion": "2",
    "description": "Meetup API v2 Methods",
    "operations": {
        "CreateEvent": {
            "httpMethod": "POST",
            "parameters": {
                "description": {
                    "location": "body",
                    "required": false
                },
                "duration": {
                    "location": "body",
                    "required": false
                },
                "editing": {
                    "location": "body",
                    "required": false
                },
                "email_reminders": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "guest_limit": {
                    "location": "body",
                    "required": false
                },
                "host_instructions": {
                    "location": "body",
                    "required": false
                },
                "hosts": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": true
                },
                "question_{index}": {
                    "location": "body",
                    "required": false
                },
                "rsvp_alerts": {
                    "location": "body",
                    "required": false
                },
                "rsvp_close": {
                    "location": "body",
                    "required": false
                },
                "rsvp_limit": {
                    "location": "body",
                    "required": false
                },
                "rsvp_open": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                },
                "venue_id": {
                    "location": "body",
                    "required": false
                },
                "waitlisting": {
                    "location": "body",
                    "required": false
                },
                "why": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": null,
            "uri": "/2/event"
        },
        "CreateGroupProfile": {
            "httpMethod": "POST",
            "parameters": {
                "answer_{qid}": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "intro": {
                    "location": "body",
                    "required": false
                },
                "inv_code": {
                    "location": "body",
                    "required": false
                },
                "new_photo": {
                    "location": "body",
                    "required": false
                },
                "photo_id": {
                    "location": "body",
                    "required": false
                },
                "site_name": {
                    "location": "body",
                    "required": false
                },
                "site_url": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method allows an authenticated member to join a group by creating a profile",
            "uri": "/2/profile"
        },
        "CreatePhotoAlbum": {
            "httpMethod": "POST",
            "parameters": {
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "title": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "This method creates photo albums within a Meetup group",
            "uri": "/2/photo_album"
        },
        "DeleteEvent": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Deletes a specified meetup",
            "uri": "/2/event/:id"
        },
        "DeleteEventComment": {
            "httpMethod": "DELETE",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete a single event comment or reply",
            "uri": "/2/event_comment/:id"
        },
        "DeleteEventPhoto": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete specified event photo",
            "uri": "/2/photo/:id"
        },
        "DeleteGroupProfile": {
            "httpMethod": "DELETE",
            "parameters": {
                "exit_comment": {
                    "location": "body",
                    "required": false
                },
                "gid": {
                    "location": "uri",
                    "required": true
                },
                "mid": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Deletes a member's group profile",
            "uri": "/2/profile/:gid/:mid"
        },
        "DeletePhoto": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete specified event photo",
            "uri": "/2/photo/:id"
        },
        "EditEvent": {
            "httpMethod": "POST",
            "parameters": {
                "description": {
                    "location": "body",
                    "required": false
                },
                "editing": {
                    "location": "body",
                    "required": false
                },
                "email_reminders": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": false
                },
                "guest_limit": {
                    "location": "body",
                    "required": false
                },
                "host_instructions": {
                    "location": "body",
                    "required": false
                },
                "hosts": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                },
                "lat,lon": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "question_edit_{id}": {
                    "location": "body",
                    "required": false
                },
                "question_{index}": {
                    "location": "body",
                    "required": false
                },
                "rsvp_alerts": {
                    "location": "body",
                    "required": false
                },
                "rsvp_close": {
                    "location": "body",
                    "required": false
                },
                "rsvp_open": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                },
                "venue_id": {
                    "location": "body",
                    "required": false
                },
                "waitlisting": {
                    "location": "body",
                    "required": false
                },
                "why": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Update an existing Meetup",
            "uri": "/2/event/:id"
        },
        "EditGroupProfile": {
            "httpMethod": "POST",
            "parameters": {
                "add_role": {
                    "location": "body",
                    "required": false
                },
                "answer_{qid}": {
                    "location": "body",
                    "required": false
                },
                "gid": {
                    "location": "uri",
                    "required": true
                },
                "intro": {
                    "location": "body",
                    "required": false
                },
                "mid": {
                    "location": "uri",
                    "required": true
                },
                "new_photo": {
                    "location": "body",
                    "required": false
                },
                "photo_id": {
                    "location": "body",
                    "required": false
                },
                "remove_role": {
                    "location": "body",
                    "required": false
                },
                "site_name": {
                    "location": "body",
                    "required": false
                },
                "site_url": {
                    "location": "body",
                    "required": false
                },
                "title": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Update a member's group profile",
            "uri": "/2/profile/:gid/:mid"
        },
        "EditMember": {
            "httpMethod": "POST",
            "parameters": {
                "add_topics": {
                    "location": "body",
                    "required": false
                },
                "bio": {
                    "location": "body",
                    "required": false
                },
                "birthday": {
                    "location": "body",
                    "required": false
                },
                "city": {
                    "location": "body",
                    "required": false
                },
                "city_id": {
                    "location": "body",
                    "required": false
                },
                "country": {
                    "location": "body",
                    "required": false
                },
                "gender": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                },
                "lang": {
                    "location": "body",
                    "required": false
                },
                "lat": {
                    "location": "body",
                    "required": false
                },
                "lon": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "radius": {
                    "location": "body",
                    "required": false
                },
                "remove_topics": {
                    "location": "body",
                    "required": false
                },
                "zip": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Edit the authorized member's attributes",
            "uri": "/2/member/:id"
        },
        "EventCommentSubscribe": {
            "httpMethod": "POST",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Subscribe to notifications on updates to a given comment thread",
            "uri": "/2/event_comment_subscribe/:id"
        },
        "EventCommentUnsubscribe": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Unsubscribe to notifications for updates to a given comment thread",
            "uri": "/2/event_comment_subscribe/:id"
        },
        "GetCategories": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "member": {
                    "location": "body",
                    "required": false
                },
                "shortname": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Returns a list of Meetup group categories",
            "uri": "/2/categories"
        },
        "GetCheckins": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method returns checkins for an event. To post checkins, see /2/checkin.",
            "uri": "/2/checkins"
        },
        "GetCheckinsStream": {
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "body",
                    "required": true
                },
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This long-polling \nstream can be easily consumed using JavaScript in any modern browser. Checkin\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/checkins"
        },
        "GetCheckinsWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/checkins"
        },
        "GetChunkedHTTPCheckinsStream": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method serves checkin notifications using\nchunked encoding\nto maintian a persistent connection with a client. The connection will only be\nterminiated for server maintenance or a connection error. It is suitable for\nlow-level HTTP clients rather than web browsers.",
            "uri": "/2/checkins"
        },
        "GetChunkedHTTPEventCommentsStream": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of Event Comments  within public meetup groups. This method uses chunked\ntransfer encoding\nto maintain a persistent connection with the client. This connection will only be\nterminated for server maintenance or a connection error.",
            "uri": "/2/event_comments"
        },
        "GetChunkedHTTPOpenVenuesStream": {
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                },
                "trickle": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of the creation and modification of public Meetup venues using\nchunked encoding\nto maintian a persistent connection with a client. The connection will only be\nterminiated for server maintenance or a connection error. It is suitable for\nlow-level HTTP clients rather than web browsers.",
            "uri": "/2/open_venues"
        },
        "GetChunkedHTTPPhotoStream": {
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method serves photo notifications using\nchunked encoding\nto maintian a persistent connection with a client. The connection will only be\nterminiated for server maintenance or a connection error. It is suitable for\nlow-level HTTP clients rather than web browsers.",
            "uri": "/2/photos"
        },
        "GetChunkedHTTPRSVPStream": {
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of rsvps within public meetup groups. This method uses chunked \ntransfer encoding \nto maintain a persistent connection with the client. This connection will only be \nterminated for server maintenance or a connection error.",
            "uri": "/2/rsvps"
        },
        "GetCities": {
            "httpMethod": "GET",
            "parameters": {
                "distance": {
                    "location": "body",
                    "required": false
                },
                "lat": {
                    "location": "body",
                    "required": true
                },
                "lon": {
                    "location": "body",
                    "required": true
                },
                "query": {
                    "location": "body",
                    "required": true
                },
                "radius": {
                    "location": "body",
                    "required": false
                },
                "size": {
                    "location": "body",
                    "required": false
                },
                "smart": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Returns Meetup cities. Can search by location, by query term/zip, or by both.  Location-only searches return all cities within a radius of the provided coordinates.  Searches with a query return up to 10 cities matching the term, and can be sorted by size or distance to a given coordinate. 'smart' ordering can be used to return the match(es) with the highest member_count, unless a smaller size match exists nearby the given coordinates.",
            "uri": "/2/cities"
        },
        "GetConcierge": {
            "httpMethod": "GET",
            "parameters": {
                "city": {
                    "location": "body",
                    "required": false
                },
                "country": {
                    "location": "body",
                    "required": false
                },
                "daily_target": {
                    "location": "body",
                    "required": false
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "lat": {
                    "location": "body",
                    "required": false
                },
                "limited_events": {
                    "location": "body",
                    "required": false
                },
                "lon": {
                    "location": "body",
                    "required": false
                },
                "radius": {
                    "location": "body",
                    "required": false
                },
                "self_groups": {
                    "location": "body",
                    "required": false
                },
                "state": {
                    "location": "body",
                    "required": false
                },
                "text_format": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                },
                "zip": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Recommends upcoming meetups for the authorized member.",
            "uri": "/2/concierge"
        },
        "GetEvent": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                },
                "limited_events": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Retrieve a single meetup",
            "uri": "/2/event/:id"
        },
        "GetEventComment": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieve a single event comment or reply",
            "uri": "/2/event_comment/:id"
        },
        "GetEventCommentLikes": {
            "httpMethod": "GET",
            "parameters": {
                "comment_id": {
                    "location": "body",
                    "required": true
                },
                "created": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Api for listing likes of a given event comment",
            "uri": "/2/event_comment_likes"
        },
        "GetEventComments": {
            "httpMethod": "GET",
            "parameters": {
                "comment_id": {
                    "location": "body",
                    "required": true
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "show_diffs": {
                    "location": "body",
                    "required": false
                },
                "thread": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method returns messages that appear under \"Talk about this Meetup\". To post messages, see the corresponding write method.",
            "uri": "/2/event_comments"
        },
        "GetEventCommentsStream": {
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "body",
                    "required": true
                },
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This long-polling\nstream can be easily consumed using JavaScript in any modern browser. Event Comment\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/event_comments"
        },
        "GetEventCommentsWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/event_comments"
        },
        "GetEventRatings": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "member_id": {
                    "location": "body",
                    "required": false
                },
                "rating": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "API method for accessing Meetup comments",
            "uri": "/2/event_ratings"
        },
        "GetEvents": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_domain": {
                    "location": "body",
                    "required": true
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "limited_events": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "rsvp": {
                    "location": "body",
                    "required": true
                },
                "status": {
                    "location": "body",
                    "required": false
                },
                "text_format": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                },
                "venue_id": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Access Meetup events using a group, member, or event id. Events in private groups are available only to authenticated members of those groups. To search events by topic or location, see Open Events.",
            "uri": "/2/events"
        },
        "GetGroupProfile": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "gid": {
                    "location": "uri",
                    "required": true
                },
                "mid": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieves a single group profile",
            "uri": "/2/profile/:gid/:mid"
        },
        "GetGroupProfiles": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "interesting": {
                    "location": "body",
                    "required": false
                },
                "joined": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "role": {
                    "location": "body",
                    "required": false
                },
                "status": {
                    "location": "body",
                    "required": false
                },
                "topic, groupnum": {
                    "location": "body",
                    "required": true
                },
                "updated": {
                    "location": "body",
                    "required": false
                },
                "visited": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method returns member profiles associated with a particular group. Meetup members have separate profiles for each group they join.",
            "uri": "/2/profiles"
        },
        "GetGroups": {
            "httpMethod": "GET",
            "parameters": {
                "category_id": {
                    "location": "body",
                    "required": true
                },
                "country, city, state": {
                    "location": "body",
                    "required": true
                },
                "domain": {
                    "location": "body",
                    "required": true
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "id": {
                    "location": "body",
                    "required": false
                },
                "lat,lon": {
                    "location": "body",
                    "required": true
                },
                "location": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "members": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "organizer_id": {
                    "location": "body",
                    "required": true
                },
                "radius": {
                    "location": "body",
                    "required": false
                },
                "topic": {
                    "location": "body",
                    "required": true
                },
                "topic, groupnum": {
                    "location": "body",
                    "required": true
                },
                "zip": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Fetch information about Meetup Groups.",
            "uri": "/2/groups"
        },
        "GetMember": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieve a single member",
            "uri": "/2/member/:id"
        },
        "GetMembers": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "joined": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "service": {
                    "location": "body",
                    "required": true
                },
                "topic,groupnum": {
                    "location": "body",
                    "required": true
                },
                "visited": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "API method for accessing members of Meetup Groups",
            "uri": "/2/members"
        },
        "GetOpenEvents": {
            "httpMethod": "GET",
            "parameters": {
                "and_text": {
                    "location": "body",
                    "required": false
                },
                "category": {
                    "location": "body",
                    "required": true
                },
                "city": {
                    "location": "body",
                    "required": true
                },
                "country": {
                    "location": "body",
                    "required": true
                },
                "distance": {
                    "location": "body",
                    "required": false
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "lat": {
                    "location": "body",
                    "required": true
                },
                "limited_events": {
                    "location": "body",
                    "required": false
                },
                "lon": {
                    "location": "body",
                    "required": true
                },
                "radius": {
                    "location": "body",
                    "required": false
                },
                "state": {
                    "location": "body",
                    "required": true
                },
                "status": {
                    "location": "body",
                    "required": false
                },
                "text": {
                    "location": "body",
                    "required": true
                },
                "text_format": {
                    "location": "body",
                    "required": false
                },
                "time": {
                    "location": "body",
                    "required": false
                },
                "topic": {
                    "location": "body",
                    "required": true
                },
                "trending": {
                    "location": "body",
                    "required": false
                },
                "zip": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Searches for recent and upcoming public events hosted by Meetup groups. Its search window  is the past one month through the next three months, and is subject to change. Open Events is optimized to search for current events by location, category, topic, or text, and only lists Meetups that have 3 or more RSVPS. The number or results returned with each request is not guaranteed to be the same as the page size due to secondary filtering. If you're looking for a particular event or events within a particular group, use the standard Events method.",
            "uri": "/2/open_events"
        },
        "GetOpenEventsStream": {
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of events within public Meetup groups. This method uses chunked\ntransfer encoding\nto maintain a persistent connection with the client. This connection will only be\nterminated for server maintenance or a connection error.",
            "uri": "/2/open_events"
        },
        "GetOpenVenues": {
            "httpMethod": "GET",
            "parameters": {
                "city": {
                    "location": "body",
                    "required": true
                },
                "country": {
                    "location": "body",
                    "required": true
                },
                "distance": {
                    "location": "body",
                    "required": false
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "lat": {
                    "location": "body",
                    "required": true
                },
                "lon": {
                    "location": "body",
                    "required": true
                },
                "radius": {
                    "location": "body",
                    "required": false
                },
                "rating": {
                    "location": "body",
                    "required": false
                },
                "rating_count": {
                    "location": "body",
                    "required": false
                },
                "state": {
                    "location": "body",
                    "required": true
                },
                "text": {
                    "location": "body",
                    "required": true
                },
                "zip": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Searches for public venues within a given geo space. To search for specific venues that your group has used, use the Venues method",
            "uri": "/2/open_venues"
        },
        "GetPhotoAlbums": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "photo_album_id": {
                    "location": "body",
                    "required": true
                },
                "time": {
                    "location": "body",
                    "required": false
                },
                "title": {
                    "location": "body",
                    "required": false
                },
                "updated": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method returns photo albums associated with Meetup groups. To create albums, see the corresponding write method.",
            "uri": "/2/photo_albums"
        },
        "GetPhotoComments": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "photo_id": {
                    "location": "body",
                    "required": true
                },
                "time": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method returns comments on meetup photos. To post messages, see the corresponding write method",
            "uri": "/2/photo_comments"
        },
        "GetPhotoStream": {
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "body",
                    "required": true
                },
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This long-polling \nstream can be easily consumed using JavaScript in any modern browser. Photo upload\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/photos"
        },
        "GetPhotoWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/photos"
        },
        "GetPhotos": {
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "photo_album_id": {
                    "location": "body",
                    "required": true
                },
                "photo_id": {
                    "location": "body",
                    "required": true
                },
                "tagged": {
                    "location": "body",
                    "required": true
                },
                "time": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method returns photos by member, group, album, event, photo ID, or tagged member.",
            "uri": "/2/photos"
        },
        "GetRSVP": {
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "body",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieve a single RSVP",
            "uri": "/2/rsvp/:id"
        },
        "GetRSVPStream": {
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "body",
                    "required": true
                },
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This long-polling \nstream can be easily consumed using JavaScript in any modern browser. RSVP\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/rsvps"
        },
        "GetRSVPWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "event_id": {
                    "location": "body",
                    "required": false
                },
                "since_count": {
                    "location": "body",
                    "required": false
                },
                "since_mtime": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/rsvps"
        },
        "GetRSVPs": {
            "httpMethod": "GET",
            "parameters": {
                "event": {
                    "location": "body",
                    "required": false
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "name": {
                    "location": "body",
                    "required": false
                },
                "rsvp": {
                    "location": "body",
                    "required": false
                },
                "social": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "Query for Event RSVPs by event",
            "uri": "/2/rsvps"
        },
        "GetVenues": {
            "httpMethod": "GET",
            "parameters": {
                "distance": {
                    "location": "body",
                    "required": false
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "fields": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": true
                },
                "group_urlname": {
                    "location": "body",
                    "required": true
                },
                "rating": {
                    "location": "body",
                    "required": false
                },
                "rating_count": {
                    "location": "body",
                    "required": false
                },
                "venue_id": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Search for Meetup venues by one of your groups, events, or venue identifiers. For a full text search on public venues use OpenVenues.",
            "uri": "/2/venues"
        },
        "PostCheckin": {
            "httpMethod": "POST",
            "parameters": {
                "attendee_member_id": {
                    "location": "body",
                    "required": false
                },
                "comment": {
                    "location": "body",
                    "required": false
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "lat, lon": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method posts event checkins that can be retrieved by /2/checkins. Event attendees may check in themselves and others in the group.",
            "uri": "/2/checkin"
        },
        "PostEventComment": {
            "httpMethod": "POST",
            "parameters": {
                "comment": {
                    "location": "body",
                    "required": true
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "in_reply_to": {
                    "location": "body",
                    "required": true
                },
                "notifications": {
                    "location": "body",
                    "required": false
                }
            },
            "summary": "This method posts messages that appear under \"Talk about this Meetup\".",
            "uri": "/2/event_comment"
        },
        "PostEventCommentFlag": {
            "httpMethod": "POST",
            "parameters": {
                "comment_id": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "This method creates a spam report for comment content",
            "uri": "/2/event_comment_flag"
        },
        "LikeEventComment": {
            "httpMethod": "POST",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Like a given Event comment",
            "uri": "/2/event_comment_like/:id"
        },
        "PostEventPhoto": {
            "httpMethod": "POST",
            "parameters": {
                "await": {
                    "location": "body",
                    "required": false
                },
                "caption": {
                    "location": "body",
                    "required": false
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "photo": {
                    "location": "body",
                    "required": true
                },
                "photo_album_id": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Uploads a photo for a given event",
            "uri": "/2/photo"
        },
        "PostEventRating": {
            "httpMethod": "POST",
            "parameters": {
                "attendee_count": {
                    "location": "body",
                    "required": false
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "rating": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "This method allows members to posts rating for an event after it's occurred. Only permitted for members who rsvp'd \"yes\" or \"maybe\" to the event",
            "uri": "/2/event_rating"
        },
        "PostMemberPhoto": {
            "httpMethod": "POST",
            "parameters": {
                "await": {
                    "location": "body",
                    "required": false
                },
                "main": {
                    "location": "body",
                    "required": false
                },
                "photo": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Uploads a photo to be assocated with a Member",
            "uri": "/2/member_photo"
        },
        "PostMessage": {
            "httpMethod": "POST",
            "parameters": {
                "cc_sender": {
                    "location": "body",
                    "required": false
                },
                "dryrun": {
                    "location": "body",
                    "required": false
                },
                "group_id": {
                    "location": "body",
                    "required": false
                },
                "hide_email": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": true
                },
                "message": {
                    "location": "body",
                    "required": true
                },
                "subject": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "This method allows messaging-authorized requests to send messages between members",
            "uri": "/2/message"
        },
        "PostPhotoComment": {
            "httpMethod": "POST",
            "parameters": {
                "comment": {
                    "location": "body",
                    "required": true
                },
                "photo_id": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "This method posts comments that appear below photos",
            "uri": "/2/photo_comment"
        },
        "PostRSVP": {
            "httpMethod": "POST",
            "parameters": {
                "answer_{qid}": {
                    "location": "body",
                    "required": false
                },
                "comments": {
                    "location": "body",
                    "required": false
                },
                "event_id": {
                    "location": "body",
                    "required": true
                },
                "guests": {
                    "location": "body",
                    "required": false
                },
                "member_id": {
                    "location": "body",
                    "required": false
                },
                "rsvp": {
                    "location": "body",
                    "required": true
                }
            },
            "summary": "Creates a new Rsvp",
            "uri": "/2/rsvp"
        },
        "UnlikeEventComment": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Unlike a given Event comment",
            "uri": "/2/event_comment_like/:id"
        }
    }
}
