{
    "name": "Meetup",
    "apiVersion": "2",
    "description": "Meetup API v2 Methods",
    "operations": {
        "V2BaseGet": {
            "httpMethod": "GET",
            "parameters": {
                "page": {
                    "location": "query",
                    "required": false
                },
                "offset": {
                    "location": "query",
                    "required": false
                },
                "desc": {
                    "location": "query",
                    "required": false
                },
                "order": {
                    "location": "query",
                    "required": false
                },
                "only": {
                    "location": "query",
                    "required": false
                },
                "omit": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Base for GET Operations, includes parameters available to all GET requests",
            "uri": "/"
        },
        "CreateEvent": {
            "httpMethod": "POST",
            "parameters": {
                "description": {
                    "location": "postField",
                    "required": false
                },
                "duration": {
                    "location": "postField",
                    "required": false
                },
                "editing": {
                    "location": "postField",
                    "required": false
                },
                "email_reminders": {
                    "location": "postField",
                    "required": false
                },
                "group_id": {
                    "location": "postField",
                    "required": true
                },
                "group_urlname": {
                    "location": "postField",
                    "required": true
                },
                "guest_limit": {
                    "location": "postField",
                    "required": false
                },
                "host_instructions": {
                    "location": "postField",
                    "required": false
                },
                "hosts": {
                    "location": "postField",
                    "required": false
                },
                "how_to_find_us": {
                    "location": "postField",
                    "required": false
                },
                "name": {
                    "location": "postField",
                    "required": true
                },
                "publish_status": {
                    "location": "postField",
                    "required": false
                },
                "question_{index}": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_alerts": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_close": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_limit": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_open": {
                    "location": "postField",
                    "required": false
                },
                "time": {
                    "location": "postField",
                    "required": false
                },
                "venue_id": {
                    "location": "postField",
                    "required": false
                },
                "venue_visibility": {
                    "location": "postField",
                    "required": false
                },
                "waitlisting": {
                    "location": "postField",
                    "required": false
                },
                "why": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": null,
            "uri": "/2/event"
        },
        "CreateGroupProfile": {
            "httpMethod": "POST",
            "parameters": {
                "answer_{qid}": {
                    "location": "postField",
                    "required": false
                },
                "group_id": {
                    "location": "postField",
                    "required": true
                },
                "group_urlname": {
                    "location": "postField",
                    "required": true
                },
                "intro": {
                    "location": "postField",
                    "required": false
                },
                "inv_code": {
                    "location": "postField",
                    "required": false
                },
                "new_photo": {
                    "location": "postField",
                    "required": false
                },
                "photo_id": {
                    "location": "postField",
                    "required": false
                },
                "site_name": {
                    "location": "postField",
                    "required": false
                },
                "site_url": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "This method allows an authenticated member to join a group by creating a profile",
            "uri": "/2/profile"
        },
        "CreatePhotoAlbum": {
            "httpMethod": "POST",
            "parameters": {
                "group_id": {
                    "location": "postField",
                    "required": true
                },
                "title": {
                    "location": "postField",
                    "required": true
                }
            },
            "summary": "This method creates photo albums within a Meetup group",
            "uri": "/2/photo_album"
        },
        "DeleteEvent": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Deletes a specified meetup",
            "uri": "/2/event/{id}}"
        },
        "DeleteEventComment": {
            "httpMethod": "DELETE",
            "parameters": {
                "fields": {
                    "location": "postField",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete a single event comment or reply",
            "uri": "/2/event_comment/{id}"
        },
        "DeleteEventPhoto": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete specified event photo",
            "uri": "/2/photo/{id}"
        },
        "DeleteGroupProfile": {
            "httpMethod": "DELETE",
            "parameters": {
                "exit_comment": {
                    "location": "postField",
                    "required": false
                },
                "gid": {
                    "location": "uri",
                    "required": true
                },
                "mid": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Deletes a member's group profile",
            "uri": "/2/profile/{gid}/{mid}"
        },
        "DeletePhoto": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete specified event photo",
            "uri": "/2/photo/{id}"
        },
        "EditEvent": {
            "httpMethod": "POST",
            "parameters": {
                "announce": {
                    "location": "postField",
                    "required": false
                },
                "announce_message": {
                    "location": "postField",
                    "required": false
                },
                "description": {
                    "location": "postField",
                    "required": false
                },
                "editing": {
                    "location": "postField",
                    "required": false
                },
                "email_reminders": {
                    "location": "postField",
                    "required": false
                },
                "group_id": {
                    "location": "postField",
                    "required": false
                },
                "guest_limit": {
                    "location": "postField",
                    "required": false
                },
                "host_instructions": {
                    "location": "postField",
                    "required": false
                },
                "hosts": {
                    "location": "postField",
                    "required": false
                },
                "hosts": {
                    "location": "postField",
                    "required": false
                },
                "how_to_find_us": {
                    "location": "uri",
                    "required": true
                },
                "lat": {
                    "location": "postField",
                    "required": false
                },
                "lon": {
                    "location": "postField",
                    "required": false
                },
                "name": {
                    "location": "postField",
                    "required": false
                },
                "publish_status": {
                    "location": "postField",
                    "required": false
                },
                "question_edit_{id}": {
                    "location": "postField",
                    "required": false
                },
                "question_{index}": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_alerts": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_close": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_open": {
                    "location": "postField",
                    "required": false
                },
                "rsvp_limit": {
                    "location": "postField",
                    "required": false
                },
                "simple_html_description": {
                    "location": "postField",
                    "required": false
                },
                "time": {
                    "location": "postField",
                    "required": false
                },
                "venue_id": {
                    "location": "postField",
                    "required": false
                },
                "venue_visibility": {
                    "location": "postField",
                    "required": false
                },
                "waitlisting": {
                    "location": "postField",
                    "required": false
                },
                "why": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "Update an existing Meetup",
            "uri": "/2/event/{id}"
        },
        "EditGroupProfile": {
            "httpMethod": "POST",
            "parameters": {
                "add_role": {
                    "location": "postField",
                    "required": false
                },
                "answer_{qid}": {
                    "location": "postField",
                    "required": false
                },
                "gid": {
                    "location": "uri",
                    "required": true
                },
                "intro": {
                    "location": "postField",
                    "required": false
                },
                "mid": {
                    "location": "uri",
                    "required": true
                },
                "new_photo": {
                    "location": "postField",
                    "required": false
                },
                "photo_id": {
                    "location": "postField",
                    "required": false
                },
                "remove_role": {
                    "location": "postField",
                    "required": false
                },
                "site_name": {
                    "location": "postField",
                    "required": false
                },
                "site_url": {
                    "location": "postField",
                    "required": false
                },
                "title": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "Update a member's group profile",
            "uri": "/2/profile/{gid}/{mid}"
        },
        "EditMember": {
            "httpMethod": "POST",
            "parameters": {
                "add_topics": {
                    "location": "postField",
                    "required": false
                },
                "bio": {
                    "location": "postField",
                    "required": false
                },
                "birthday": {
                    "location": "postField",
                    "required": false
                },
                "city": {
                    "location": "postField",
                    "required": false
                },
                "city_id": {
                    "location": "postField",
                    "required": false
                },
                "country": {
                    "location": "postField",
                    "required": false
                },
                "gender": {
                    "location": "postField",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                },
                "lang": {
                    "location": "postField",
                    "required": false
                },
                "lat": {
                    "location": "postField",
                    "required": false
                },
                "lon": {
                    "location": "postField",
                    "required": false
                },
                "name": {
                    "location": "postField",
                    "required": false
                },
                "radius": {
                    "location": "postField",
                    "required": false
                },
                "remove_topics": {
                    "location": "postField",
                    "required": false
                },
                "zip": {
                    "location": "postField",
                    "required": false
                },
                "sync_photo": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "Edit the authorized member's attributes",
            "uri": "/2/member/{id}"
        },
        "EventCommentSubscribe": {
            "httpMethod": "POST",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Subscribe to notifications on updates to a given comment thread",
            "uri": "/2/event_comment_subscribe/{id}"
        },
        "EventCommentUnsubscribe": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Unsubscribe to notifications for updates to a given comment thread",
            "uri": "/2/event_comment_subscribe/{id}"
        },
        "GetCategories": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "member": {
                    "location": "query",
                    "required": false
                },
                "shortname": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Returns a list of Meetup group categories",
            "uri": "/2/categories"
        },
        "GetChunkedHTTPEventCommentsStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of Event Comments  within public meetup groups. This method uses chunked\ntransfer encoding\nto maintain a persistent connection with the client. This connection will only be\nterminated for server maintenance or a connection error.",
            "uri": "/2/event_comments"
        },
        "GetChunkedHTTPOpenVenuesStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                },
                "trickle": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of the creation and modification of public Meetup venues using\nchunked encoding\nto maintian a persistent connection with a client. The connection will only be\nterminiated for server maintenance or a connection error. It is suitable for\nlow-level HTTP clients rather than web browsers.",
            "uri": "/2/open_venues"
        },
        "GetChunkedHTTPPhotoStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This method serves photo notifications using\nchunked encoding\nto maintian a persistent connection with a client. The connection will only be\nterminiated for server maintenance or a connection error. It is suitable for\nlow-level HTTP clients rather than web browsers.",
            "uri": "/2/photos"
        },
        "GetChunkedHTTPRSVPStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of rsvps within public meetup groups. This method uses chunked \ntransfer encoding \nto maintain a persistent connection with the client. This connection will only be \nterminated for server maintenance or a connection error.",
            "uri": "/2/rsvps"
        },
        "GetCities": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "distance": {
                    "location": "query",
                    "required": false
                },
                "lat": {
                    "location": "query",
                    "required": false
                },
                "lon": {
                    "location": "query",
                    "required": false
                },
                "query": {
                    "location": "query",
                    "required": false
                },
                "radius": {
                    "location": "query",
                    "required": false
                },
                "size": {
                    "location": "query",
                    "required": false
                },
                "smart": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Returns Meetup cities. Can search by location, by query term/zip, or by both.  Location-only searches return all cities within a radius of the provided coordinates.  Searches with a query return up to 10 cities matching the term, and can be sorted by size or distance to a given coordinate. 'smart' ordering can be used to return the match(es) with the highest member_count, unless a smaller size match exists nearby the given coordinates.",
            "uri": "/2/cities"
        },
        "GetConcierge": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "city": {
                    "location": "query",
                    "required": false
                },
                "country": {
                    "location": "query",
                    "required": false
                },
                "daily_target": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "lat": {
                    "location": "query",
                    "required": false
                },
                "limited_events": {
                    "location": "query",
                    "required": false
                },
                "lon": {
                    "location": "query",
                    "required": false
                },
                "radius": {
                    "location": "query",
                    "required": false
                },
                "self_groups": {
                    "location": "query",
                    "required": false
                },
                "state": {
                    "location": "query",
                    "required": false
                },
                "text_format": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                },
                "zip": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Recommends upcoming meetups for the authorized member.",
            "uri": "/2/concierge"
        },
        "GetEvent": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                },
                "limited_events": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Retrieve a single meetup",
            "uri": "/2/event/{id}"
        },
        "GetEventComment": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieve a single event comment or reply",
            "uri": "/2/event_comment/{id}"
        },
        "GetEventCommentLikes": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "comment_id": {
                    "location": "query",
                    "required": true
                },
                "created": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Api for listing likes of a given event comment",
            "uri": "/2/event_comment_likes"
        },
        "GetEventComments": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "comment_id": {
                    "location": "query",
                    "required": false
                },
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "name": {
                    "location": "query",
                    "required": false
                },
                "show_diffs": {
                    "location": "query",
                    "required": false
                },
                "thread": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This method returns messages that appear under \"Talk about this Meetup\". To post messages, see the corresponding write method.",
            "uri": "/2/event_comments"
        },
        "GetEventCommentsStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "query",
                    "required": true
                },
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This long-polling\nstream can be easily consumed using JavaScript in any modern browser. Event Comment\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/event_comments"
        },
        "GetEventCommentsWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "event_id": {
                    "location": "postField",
                    "required": false
                },
                "since_count": {
                    "location": "postField",
                    "required": false
                },
                "since_mtime": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/event_comments"
        },
        "GetEventRatings": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "query",
                    "required": true
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "rating": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "API method for accessing Meetup comments",
            "uri": "/2/event_ratings"
        },
        "GetEvents": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_domain": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "group_urlname": {
                    "location": "query",
                    "required": false
                },
                "limited_events": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "rsvp": {
                    "location": "query",
                    "required": false
                },
                "status": {
                    "location": "query",
                    "required": false
                },
                "text_format": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                },
                "venue_id": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Access Meetup events using a group, member, or event id. Events in private groups are available only to authenticated members of those groups. To search events by topic or location, see Open Events.",
            "uri": "/2/events"
        },
        "GetGroupProfile": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "gid": {
                    "location": "uri",
                    "required": true
                },
                "mid": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieves a single group profile",
            "uri": "/2/profile/{gid}/{mid}"
        },
        "GetGroupProfiles": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "group_urlname": {
                    "location": "query",
                    "required": false
                },
                "interesting": {
                    "location": "query",
                    "required": false
                },
                "joined": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "name": {
                    "location": "query",
                    "required": false
                },
                "role": {
                    "location": "query",
                    "required": false
                },
                "status": {
                    "location": "query",
                    "required": false
                },
                "updated": {
                    "location": "query",
                    "required": false
                },
                "visited": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This method returns member profiles associated with a particular group. Meetup members have separate profiles for each group they join.",
            "uri": "/2/profiles"
        },
        "GetGroups": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "category_id": {
                    "location": "query",
                    "required": false
                },
                "country": {
                    "location": "query",
                    "required": false
                },
                "city": {
                    "location": "query",
                    "required": false
                },
                "state": {
                    "location": "query",
                    "required": false
                },
                "domain": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "group_urlname": {
                    "location": "query",
                    "required": false
                },
                "id": {
                    "location": "query",
                    "required": false
                },
                "lon": {
                    "location": "query",
                    "required": false
                },
                "lat": {
                    "location": "query",
                    "required": false
                },
                "location": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "members": {
                    "location": "query",
                    "required": false
                },
                "name": {
                    "location": "query",
                    "required": false
                },
                "organizer_id": {
                    "location": "query",
                    "required": false
                },
                "radius": {
                    "location": "query",
                    "required": false
                },
                "topic": {
                    "location": "query",
                    "required": false
                },
                "groupnum": {
                    "location": "query",
                    "required": false
                },
                "zip": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Fetch information about Meetup Groups.",
            "uri": "/2/groups"
        },
        "GetMember": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieve a single member",
            "uri": "/2/member/{id}"
        },
        "GetMembers": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "group_urlname": {
                    "location": "query",
                    "required": false
                },
                "joined": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "name": {
                    "location": "query",
                    "required": false
                },
                "service": {
                    "location": "query",
                    "required": false
                },
                "topic": {
                    "location": "query",
                    "required": false
                },
                "groupnum": {
                    "location": "query",
                    "required": false
                },
                "visited": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "API method for accessing members of Meetup Groups",
            "uri": "/2/members"
        },
        "GetOpenEvents": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "and_text": {
                    "location": "query",
                    "required": false
                },
                "category": {
                    "location": "query",
                    "required": false
                },
                "city": {
                    "location": "query",
                    "required": false
                },
                "country": {
                    "location": "query",
                    "required": false
                },
                "distance": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "lat": {
                    "location": "query",
                    "required": false
                },
                "limited_events": {
                    "location": "query",
                    "required": false
                },
                "lon": {
                    "location": "query",
                    "required": false
                },
                "radius": {
                    "location": "query",
                    "required": false
                },
                "state": {
                    "location": "query",
                    "required": false
                },
                "status": {
                    "location": "query",
                    "required": false
                },
                "text": {
                    "location": "query",
                    "required": false
                },
                "text_format": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                },
                "topic": {
                    "location": "query",
                    "required": false
                },
                "trending": {
                    "location": "query",
                    "required": false
                },
                "zip": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Searches for recent and upcoming public events hosted by Meetup groups. Its search window  is the past one month through the next three months, and is subject to change. Open Events is optimized to search for current events by location, category, topic, or text, and only lists Meetups that have 3 or more RSVPS. The number or results returned with each request is not guaranteed to be the same as the page size due to secondary filtering. If you're looking for a particular event or events within a particular group, use the standard Events method.",
            "uri": "/2/open_events"
        },
        "GetOpenEventsStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Live HTTP stream of events within public Meetup groups. This method uses chunked\ntransfer encoding\nto maintain a persistent connection with the client. This connection will only be\nterminated for server maintenance or a connection error.",
            "uri": "/2/open_events"
        },
        "GetOpenVenues": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "city": {
                    "location": "query",
                    "required": false
                },
                "country": {
                    "location": "query",
                    "required": false
                },
                "distance": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "lat": {
                    "location": "query",
                    "required": false
                },
                "lon": {
                    "location": "query",
                    "required": false
                },
                "radius": {
                    "location": "query",
                    "required": false
                },
                "rating": {
                    "location": "query",
                    "required": false
                },
                "rating_count": {
                    "location": "query",
                    "required": false
                },
                "state": {
                    "location": "query",
                    "required": false
                },
                "text": {
                    "location": "query",
                    "required": false
                },
                "zip": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Searches for public venues within a given geo space. To search for specific venues that your group has used, use the Venues method",
            "uri": "/2/open_venues"
        },
        "GetPhotoAlbums": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "photo_album_id": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                },
                "title": {
                    "location": "query",
                    "required": false
                },
                "updated": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This method returns photo albums associated with Meetup groups. To create albums, see the corresponding write method.",
            "uri": "/2/photo_albums"
        },
        "GetPhotoComments": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "name": {
                    "location": "query",
                    "required": false
                },
                "photo_id": {
                    "location": "query",
                    "required": true
                },
                "time": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This method returns comments on meetup photos. To post messages, see the corresponding write method",
            "uri": "/2/photo_comments"
        },
        "GetPhotoStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "query",
                    "required": true
                },
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This long-polling \nstream can be easily consumed using JavaScript in any modern browser. Photo upload\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/photos"
        },
        "GetPhotoWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "since_count": {
                    "location": "postField",
                    "required": false
                },
                "since_mtime": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/photos"
        },
        "GetPhotos": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "group_urlname": {
                    "location": "query",
                    "required": false
                },
                "member_id": {
                    "location": "query",
                    "required": false
                },
                "photo_album_id": {
                    "location": "query",
                    "required": false
                },
                "photo_id": {
                    "location": "query",
                    "required": false
                },
                "tagged": {
                    "location": "query",
                    "required": false
                },
                "time": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This method returns photos by member, group, album, event, photo ID, or tagged member.",
            "uri": "/2/photos"
        },
        "GetRSVP": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "fields": {
                    "location": "query",
                    "required": false
                },
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Retrieve a single RSVP",
            "uri": "/2/rsvp/{id}"
        },
        "GetRSVPStream": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "callback": {
                    "location": "query",
                    "required": true
                },
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "since_count": {
                    "location": "query",
                    "required": false
                },
                "since_mtime": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "This long-polling \nstream can be easily consumed using JavaScript in any modern browser. RSVP\nnotifications are received when they happen, or as soon as your script finishes handling its\nlast notification.",
            "uri": "/2/rsvps"
        },
        "GetRSVPWebSocketStream": {
            "httpMethod": "WS",
            "parameters": {
                "event_id": {
                    "location": "postField",
                    "required": false
                },
                "since_count": {
                    "location": "postField",
                    "required": false
                },
                "since_mtime": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "For browsers that support it, WebSockets is a more\nefficient alternative to the long-polling stream. This is a push only endpoint and will discard\nany messages received from the client after the socket is open.",
            "uri": "/2/rsvps"
        },
        "GetRSVPs": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "responseClass": "MultiResultResponse",
            "parameters": {
                "event": {
                    "location": "query",
                    "required": false
                },
                "event_id": {
                    "location": "query",
                    "required": true
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "name": {
                    "location": "query",
                    "required": false
                },
                "rsvp": {
                    "location": "query",
                    "required": false
                },
                "social": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Query for Event RSVPs by event",
            "uri": "/2/rsvps"
        },
        "GetVenues": {
            "extends": "V2BaseGet",
            "httpMethod": "GET",
            "parameters": {
                "distance": {
                    "location": "query",
                    "required": false
                },
                "event_id": {
                    "location": "query",
                    "required": false
                },
                "fields": {
                    "location": "query",
                    "required": false
                },
                "group_id": {
                    "location": "query",
                    "required": false
                },
                "group_urlname": {
                    "location": "query",
                    "required": false
                },
                "rating": {
                    "location": "query",
                    "required": false
                },
                "rating_count": {
                    "location": "query",
                    "required": false
                },
                "venue_id": {
                    "location": "query",
                    "required": false
                }
            },
            "summary": "Search for Meetup venues by one of your groups, events, or venue identifiers. For a full text search on public venues use OpenVenues.",
            "uri": "/2/venues"
        },
        "PostEventComment": {
            "httpMethod": "POST",
            "parameters": {
                "comment": {
                    "location": "postField",
                    "required": true
                },
                "event_id": {
                    "location": "postField",
                    "required": true
                },
                "in_reply_to": {
                    "location": "postField",
                    "required": true
                },
                "notifications": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "This method posts messages that appear under \"Talk about this Meetup\".",
            "uri": "/2/event_comment"
        },
        "PostEventCommentFlag": {
            "httpMethod": "POST",
            "parameters": {
                "comment_id": {
                    "location": "postField",
                    "required": true
                }
            },
            "summary": "This method creates a spam report for comment content",
            "uri": "/2/event_comment_flag"
        },
        "LikeEventComment": {
            "httpMethod": "POST",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Like a given Event comment",
            "uri": "/2/event_comment_like/{id}"
        },
        "PostEventPhoto": {
            "httpMethod": "POST",
            "parameters": {
                "await": {
                    "location": "postField",
                    "required": false
                },
                "caption": {
                    "location": "postField",
                    "required": false
                },
                "event_id": {
                    "location": "postField",
                    "required": true
                },
                "photo": {
                    "location": "postFile",
                    "required": true
                },
                "photo_album_id": {
                    "location": "postField",
                    "required": true
                }
            },
            "summary": "Uploads a photo for a given event",
            "uri": "/2/photo"
        },
        "PostEventRating": {
            "httpMethod": "POST",
            "parameters": {
                "attendee_count": {
                    "location": "postField",
                    "required": false
                },
                "event_id": {
                    "location": "postField",
                    "required": true
                },
                "rating": {
                    "location": "postField",
                    "required": true
                }
            },
            "summary": "This method allows members to posts rating for an event after it's occurred. Only permitted for members who rsvp'd \"yes\" or \"maybe\" to the event",
            "uri": "/2/event_rating"
        },
        "PostMemberPhoto": {
            "httpMethod": "POST",
            "parameters": {
                "await": {
                    "location": "postField",
                    "required": false
                },
                "main": {
                    "location": "postField",
                    "required": false
                },
                "photo": {
                    "location": "postFile",
                    "required": true
                },
                "sync_photo": {
                    "location": "postFile",
                    "required": true
                }
            },
            "summary": "Uploads a photo to be assocated with a Member",
            "uri": "/2/member_photo"
        },
        "DeleteMemberPhoto": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Delete the specified member photo.",
            "uri": "/2/member_photo/{id}"
        },
        "PostMessage": {
            "httpMethod": "POST",
            "parameters": {
                "cc_sender": {
                    "location": "postField",
                    "required": false
                },
                "dryrun": {
                    "location": "postField",
                    "required": false
                },
                "group_id": {
                    "location": "postField",
                    "required": false
                },
                "hide_email": {
                    "location": "postField",
                    "required": false
                },
                "member_id": {
                    "location": "postField",
                    "required": true
                },
                "message": {
                    "location": "postField",
                    "required": true
                },
                "subject": {
                    "location": "postField",
                    "required": true
                }
            },
            "summary": "This method allows messaging-authorized requests to send messages between members",
            "uri": "/2/message"
        },
        "PostPhotoComment": {
            "httpMethod": "POST",
            "parameters": {
                "comment": {
                    "location": "postField",
                    "required": true
                },
                "photo_id": {
                    "location": "postField",
                    "required": true
                }
            },
            "summary": "This method posts comments that appear below photos",
            "uri": "/2/photo_comment"
        },
        "PostRSVP": {
            "httpMethod": "POST",
            "parameters": {
                "answer_{qid}": {
                    "location": "postField",
                    "required": false
                },
                "comments": {
                    "location": "postField",
                    "required": false
                },
                "event_id": {
                    "location": "postField",
                    "required": true
                },
                "guests": {
                    "location": "postField",
                    "required": false
                },
                "member_id": {
                    "location": "postField",
                    "required": false
                },
                "rsvp": {
                    "location": "postField",
                    "required": true
                },
                "agree_to_refund": {
                    "location": "postField",
                    "required": false
                }
            },
            "summary": "Creates a new Rsvp",
            "uri": "/2/rsvp"
        },
        "UnlikeEventComment": {
            "httpMethod": "DELETE",
            "parameters": {
                "id": {
                    "location": "uri",
                    "required": true
                }
            },
            "summary": "Unlike a given Event comment",
            "uri": "/2/event_comment_like/{id}"
        }
    }
}
